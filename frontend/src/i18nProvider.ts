//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    Character: {
      name: 'Character',
      fields: {
        author: 'Author',
        characterName: 'Character Name',
        expressions: 'Expressions',
        id: 'id',
      },
    },
    Expressions: {
      name: 'Expressions',
      fields: {
        expressionText: 'Expression Text',
        emotion: 'Emotion',
        triggerQuestionKeywords: 'Trigger Question Keywords',
        id: 'id',
      },
    },
    UserInteractions: {
      name: 'User Interactions',
      fields: {
        userID: 'User Id',
        question: 'Question',
        response: 'Response',
        timestamp: 'Timestamp',
        characterUsed: 'Character Used',
        id: 'id',
      },
    },
    User: {
      name: 'User',
      fields: {
        username: 'Username',
        email: 'Email',
        passwordHash: 'Password Hash',
        signUpDate: 'Sign Up Date',
        lastLogin: 'Last Login',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Character: {
      name: 'Character (fr)',
      fields: {
        author: 'Author (fr)',
        characterName: 'Character Name (fr)',
        expressions: 'Expressions (fr)',
        id: 'id',
      },
    },
    Expressions: {
      name: 'Expressions (fr)',
      fields: {
        expressionText: 'Expression Text (fr)',
        emotion: 'Emotion (fr)',
        triggerQuestionKeywords: 'Trigger Question Keywords (fr)',
        id: 'id',
      },
    },
    UserInteractions: {
      name: 'User Interactions (fr)',
      fields: {
        userID: 'User Id (fr)',
        question: 'Question (fr)',
        response: 'Response (fr)',
        timestamp: 'Timestamp (fr)',
        characterUsed: 'Character Used (fr)',
        id: 'id',
      },
    },
    User: {
      name: 'User (fr)',
      fields: {
        username: 'Username (fr)',
        email: 'Email (fr)',
        passwordHash: 'Password Hash (fr)',
        signUpDate: 'Sign Up Date (fr)',
        lastLogin: 'Last Login (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
